plugins {
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id 'org.flywaydb.flyway' version '9.22.3'
}

group = 'com.doctorhunt'
version = '1.0.0'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

configurations {
    flywayMigration
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/doctorhunt_java'
    user = 'postgres'
    password = 'nosql'
    locations = ['classpath:/migration/db']  // Ensure the migration scripts are in this path
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation 'org.flywaydb:flyway-core:9.22.3'
   implementation 'com.fasterxml.jackson.core:jackson-databind'
implementation 'com.fasterxml.jackson.core:jackson-annotations'

}

test {
    ignoreFailures = true
}

sourceSets {
    main {
        resources {
            srcDir 'src/main/resources'
        }
    }
}

// Ensure duplicate entries for resources like application.properties are excluded
tasks.withType(ProcessResources) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
